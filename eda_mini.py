# -*- coding: utf-8 -*-
"""Eda mini.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1cMZcZc4UOftuOGpaS_G7lxfv4JD9en4y
"""

from google.colab import drive
drive.mount('/content/drive')

import pandas as pd
movies=pd.read_csv('/content/drive/MyDrive/movie dataset.csv')
movies

movies.isnull().sum()

movies = movies.dropna(subset=['genre'])
movies

movies.isnull().sum()

print(movies['genre'])

import matplotlib.pyplot as plt
import seaborn as sns

genre_counts = movies["genre"].value_counts()
genre_counts = genre_counts.head(15)
plt.figure(figsize=(6, 3))
sns.barplot(x=genre_counts.index, y=genre_counts.values, palette="viridis")
plt.xticks(rotation=90)  # Rotate x-axis labels for better readability
plt.xlabel("Genre")
plt.ylabel("Count")
plt.title("Genre Counts")
plt.show()

language_counts = movies["original_language"].value_counts().head(5)

# Create a bar plot
plt.figure(figsize=(6, 4))
sns.barplot(x=language_counts.index, y=language_counts.values, palette="deep")
plt.xticks(rotation=90)
plt.xlabel("Original Language")
plt.ylabel("Count")
plt.title("Original Language Counts")
plt.show()

# Correlation analysis
correlation_matrix = movies.corr()
sns.heatmap(correlation_matrix, annot=True, cmap='coolwarm', fmt=".2f")
plt.title('Correlation Matrix')
plt.show()

grouped = movies.groupby('genre')['popularity'].mean()

# Sort the grouped data in descending order and select the top 20 values
top_10 = grouped.sort_values(ascending=False).head(10)

# Create a bar plot for the top 20 values
plt.figure(figsize=(6, 3))
top_10.plot(kind='bar', color='violet')
plt.xlabel("Categories")
plt.ylabel("Mean Value")
plt.title("Top Popularity")
plt.xticks(rotation=90)
plt.show()

movies["genre"].value_counts()

df = movies[movies['genre'].str.contains('Drama') & movies['genre'].str.contains('Comedy')]
df.head(5)

grouped = df.groupby('genre')['popularity'].mean()

# Sort the grouped data in descending order and select the top 20 values
top_10 = grouped.sort_values(ascending=False).head(10)

# Create a bar plot for the top 20 values
plt.figure(figsize=(6, 3))
top_10.plot(kind='bar', color='blue')
plt.xlabel("Categories")
plt.ylabel("Mean Value")
plt.title("Top Popularity")
plt.xticks(rotation=90)
plt.show()

plt.figure(figsize=(6, 4))
sns.scatterplot(x='vote_average', y='vote_count', data=df)
plt.title('Scatter Plot of Vote Average vs. Vote Count')
plt.xlabel('Vote Average')
plt.ylabel('Vote Count')
plt.show()

language_counts = df["original_language"].value_counts().head(5)

# Create a bar plot
plt.figure(figsize=(6, 4))
sns.barplot(x=language_counts.index, y=language_counts.values)
plt.xticks(rotation=90)
plt.xlabel("Original Language")
plt.ylabel("Count")
plt.title("Original Language Counts")
plt.show()